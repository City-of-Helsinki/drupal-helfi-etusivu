<?php

/**
 * @file
 * Contains necessary alterations for the Helfi etusivu instance.
 */

declare(strict_types = 1);

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\Render\BubbleableMetadata;
use Drupal\helfi_platform_config\DTO\ParagraphTypeCollection;
use Drupal\image\Entity\ImageStyle;
use Drupal\media\MediaInterface;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * Alter promoted to front page label value and position in news item forms.
 *
 * This module alter hook is too early to fully handle the
 * "promote" field alterations, as the entity add/edit form sidebar variables
 * are altered by Gin theme and HDBT Admin theme.
 * See: hdbt_admin/hdbt_admin.theme / hdbt_admin_apply_form_theme().
 */
function helfi_etusivu_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) : void {
  if (!str_contains($form_id, 'news_item') || !isset($form['promote'])) {
    return;
  }

  // Pass "should_move" variable to form element and update the widget title.
  $form['promote']['#should_move'] = TRUE;
  $form['promote']['widget']['value']['#title'] = t('Publish the news item in the top news flow', [], ['context' => 'News item promoted field title']);
  $form['promote']['widget']['#title'] = t('Top news flow', [], ['context' => 'News item promoted field wrapper title']);
  $form['promote']['widget']['#title_display'] = 'above';
}

/**
 * Implements hook_views_query_alter().
 */
function helfi_etusivu_views_query_alter(ViewExecutable $view, QueryPluginBase $query) : void {
  if (in_array($view->id(), ['ordered_news_list', 'frontpage_news'])) {
    $table = $query->getTableInfo('draggableviews_structure');
    if (isset($table['join']->extra)) {
      $langcode = \Drupal::languageManager()->getCurrentLanguage(LanguageInterface::TYPE_CONTENT)->getId();
      $table['join']->extra = !$table['join']->extra ? [] : $table['join']->extra;
      $table['join']->extra[] = [
        'field' => 'langcode',
        'value' => $langcode,
        'operator' => '=',
      ];
    }
  }
}

/**
 * Implements hook_tokens().
 */
function helfi_etusivu_tokens(
  $type,
  $tokens,
  array $data,
  array $options,
  BubbleableMetadata $bubbleable_metadata
) : array {
  $replacements = [];

  foreach ($tokens as $name => $original) {

    // Custom token for shareable-image.
    if ($name === 'shareable-image' && !empty($data['node'])) {
      /** @var \Drupal\node\Entity\Node $node */
      $node = $data['node'];

      if (
        $node->hasField('field_main_image') &&
        isset($node->field_main_image->entity) &&
        $node->field_main_image->entity instanceof MediaInterface &&
        $node->field_main_image->entity->hasField('field_media_image')
      ) {
        $image_style = ImageStyle::load('og_image');

        // If main image has an image set, use it as the shareable image.
        $image_entity = $node->field_main_image->entity->field_media_image;

        // Skip current entity if it's empty.
        if ($image_entity->isEmpty()) {
          break;
        }

        $image_path = $image_entity->entity->getFileUri();
        $replacements[$original] = $image_style->buildUrl($image_path);
      }
    }
  }

  return $replacements;
}

/**
 * Implements hook_cron().
 */
function helfi_etusivu_cron() : void {
  // Get promoted news_item nodes that are more than one month old.
  $result = \Drupal::entityQuery('node')
    ->condition('type', 'news_item')
    ->condition('promote', 1)
    ->condition('created', strtotime('-1 month'), '<')
    ->range(0, 50)
    ->execute();

  $promoted_nodes = \Drupal::entityTypeManager()
    ->getStorage('node')
    ->loadMultiple($result);

  // Remove promotion.
  foreach ($promoted_nodes as $node) {
    $node->promote = 0;
    $node->save();
  }

}

/**
 * Implements hook_helfi_paragraph_types().
 */
function helfi_etusivu_helfi_paragraph_types() : array {
  $types = [
    'field_content' => [
      'front_page_latest_news',
      'front_page_top_news',
      'current',
      'event_list',
    ],
  ];

  $enabled = [];
  foreach ($types as $field => $paragraphTypes) {
    foreach ($paragraphTypes as $paragraphType) {
      $enabled[] = new ParagraphTypeCollection('node', 'landing_page', $field, $paragraphType);
    }
  }
  return $enabled;
}

/**
 * Implements hook_theme_registry_alter().
 */
function helfi_etusivu_theme_registry_alter(&$theme_registry) : void {
  // Override the Composer debug item template to remove custom version checks.
  $theme_registry['debug_item__composer']['path'] = \Drupal::service('extension.list.module')->getPath('helfi_etusivu') . '/templates';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function helfi_etusivu_preprocess_toolbar(&$variables): void {
  $variables['#attached']['library'][] = 'helfi_etusivu/menu-styles';
}

/**
 * Implements hook_block_alter().
 */
function helfi_etusivu_block_alter(&$definitions) {
  foreach ($definitions as $id => $definition) {
    if ($id === 'local_tasks_block') {
      $definitions[$id]['class'] = 'Drupal\helfi_etusivu\Plugin\Block\EtusivuLocalTasksBlock';
    }
  }
}
