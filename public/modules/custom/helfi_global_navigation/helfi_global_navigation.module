<?php

/**
 * @file
 * Contains necessary alterations for the Helfi global navigation.
 */

declare(strict_types = 1);

use Drupal\helfi_api_base\Environment\Project;
use Drupal\helfi_global_navigation\MenuRequest;
use Drupal\helfi_navigation\Menu\Menu;
use Drupal\helfi_global_navigation\Entity\GlobalMenu;
use Drupal\menu_link_content\MenuLinkContentInterface;
use Drupal\system\MenuInterface;

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function helfi_global_navigation_menu_update(MenuInterface $entity) {
  if (
    Menu::menuExists($entity->id()) &&
    $entity->id() != Menu::MAIN_MENU
  ) {
    _helfi_global_navigation_create_menu($entity->id());
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function helfi_global_navigation_menu_link_content_update(MenuLinkContentInterface $entity) {
  if (
    Menu::menuExists($entity->getMenuName()) &&
    $entity->getMenuName() != Menu::MAIN_MENU
  ) {
    _helfi_global_navigation_create_menu($entity->getMenuName());
  }
}

/**
 * Create menu update queue item.
 */
function _helfi_global_navigation_create_menu(string $menu_type) {
  $menu_tree_builder = \Drupal::service('helfi_navigation.menu_tree_builder_service');
  $entity_storage = \Drupal::entityTypeManager()->getStorage('global_menu');
  $default_language = \Drupal::languageManager()->getDefaultLanguage()->getId();
  $languages = \Drupal::languageManager()->getLanguages();
  $cache = \Drupal::service('helfi_global_navigation.menu_cache');

  $existing = $entity_storage->loadByProperties([
    'menu_type' => $menu_type,
    'langcode' => $default_language,
  ]);

  $menu = $existing ? reset($existing) : NULL;

  // Handle default language first to make sure the entity is
  // created with default language.
  $ordered_language_codes = array_unique(
    array_merge([$default_language], array_keys($languages))
  );

  foreach ($ordered_language_codes as $lang_code) {
    $site_name = \Drupal::configFactory()
      ->get('system.site')
      ->getOriginal('name', $default_language);

    $time = \Drupal::time()->getCurrentTime();

    if (!$existing && !$menu) {
      $menu = GlobalMenu::create([
        'language' => $lang_code,
        'project' => Project::ETUSIVU,
        'menu_type' => $menu_type,
        'site_name' => $site_name,
        'weight' => 0,
        'menu_tree' => json_encode($menu_tree_builder->buildMenuTree($menu_type, $lang_code)),
      ]);
      $menu->save();
    }
    else {
      $translation = $menu->hasTranslation($lang_code)
        ? $menu->getTranslation($lang_code)
        : $menu->addTranslation($lang_code);

      $translation->set('menu_tree', json_encode($menu_tree_builder->buildMenuTree($menu_type, $lang_code)))
        ->set('menu_type', $menu_type)
        ->set('site_name', $site_name)
        ->save();
    }

    // Cache all languages separately.
    $response = MenuRequest::createResponse($menu_type, $lang_code, [$menu], $time);
    $cache->setCache($menu_type, $lang_code, $response);
  }

}
