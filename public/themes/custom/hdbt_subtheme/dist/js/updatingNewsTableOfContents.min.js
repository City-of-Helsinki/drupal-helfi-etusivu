/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/updatingNewsTableOfContents.js":
/*!***********************************************!*\
  !*** ./src/js/updatingNewsTableOfContents.js ***!
  \***********************************************/
/***/ (function() {

eval("\n\n(function (Drupal, once) {\n  Drupal.behaviors.updating_news_table_of_contents = {\n    attach: function attach() {\n      const tableOfContentsNewsUpdates = document.getElementById('helfi-toc-table-of-contents-news-updates');\n\n      // Bail if table of contents is not enabled.\n      if (!tableOfContentsNewsUpdates) {\n        return;\n      }\n      const tableOfContentsList = document.querySelector('#helfi-toc-table-of-contents-list > ul');\n      const mainContent = document.querySelector('main.layout-main-wrapper');\n      const reservedElems = document.querySelectorAll('[id]');\n      reservedElems.forEach(function (elem) {\n        Drupal.tableOfContents.reservedIds.push(elem.id);\n      });\n      let exclusions = Drupal.tableOfContents.exclusions();\n\n      // Add exclusions for the news updates table of contents. NOTICE: The text paragraph is the only one that\n      // has paragraph as a prefix, so it might look a bit silly compared to the other selectors.\n      exclusions += ':not(.components--upper *)' + ':not(.component--remote-video *)' + ':not(.component--paragraph-text *)' + ':not(.component--banner *)' + ':not(.component--image *)' + ':not(.block--news-of-interest *)' + ':not(#helfi-toc-table-of-contents-news-updates *)';\n\n      // Craft table of contents for news item.\n      once('updating-news-table-of-contents', Drupal.tableOfContents.titleComponents(exclusions).join(','), mainContent).forEach(function (content) {\n        const {\n          nodeName,\n          anchorName\n        } = Drupal.tableOfContents.createTableOfContentElements(content, []);\n\n        // On updating news there is published date under the title that we want to display in the\n        // table of contents news update version. For normal table of contents this remains empty.\n        let contentPublishDate = '';\n        if (tableOfContentsNewsUpdates && content.nextSibling && content.nextElementSibling.nodeName === 'TIME') {\n          let contentPublishDateStamp = new Date(content.nextElementSibling.dateTime);\n          contentPublishDate = `${contentPublishDateStamp.getDate()}.${contentPublishDateStamp.getMonth() + 1}.${contentPublishDateStamp.getFullYear()}`;\n        }\n\n        // Create table of contents if component is enabled.\n        if (tableOfContentsList && nodeName === 'h2') {\n          let listItem = document.createElement('li');\n          listItem.classList.add('table-of-contents__item');\n\n          // Add content publish date and its wrapper to list items only if they exist.\n          if (contentPublishDate) {\n            let publishDate = document.createElement('time');\n            publishDate.dateTime = content.nextElementSibling.dateTime;\n            publishDate.textContent = contentPublishDate;\n            listItem.appendChild(publishDate);\n          }\n          let link = document.createElement('a');\n          link.classList.add('table-of-contents__link');\n          link.href = `#${anchorName}`;\n          link.textContent = content.textContent.trim();\n          listItem.appendChild(link);\n          tableOfContentsList.appendChild(listItem);\n        }\n      });\n      if (tableOfContentsNewsUpdates) {\n        Drupal.tableOfContents.updateTOC(tableOfContentsNewsUpdates);\n      }\n    }\n  };\n})(Drupal, once);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/updatingNewsTableOfContents.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/updatingNewsTableOfContents.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=updatingNewsTableOfContents.min.js.map